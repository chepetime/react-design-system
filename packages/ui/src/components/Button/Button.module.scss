@use "./../../styles" as styles;
@use "~@chepe/tokens/tokens/tokens.scss" as tokens;

:root {
  --button-color: #{tokens.$base-blue-100};
  --button-background-color: #{tokens.$base-blue-600};
  --button-background-color-hover: #{tokens.$base-blue-900};
  --button-disabled-background-color: #{tokens.$base-gray-800};
}

:global :root .dark {
  --button-color: #{tokens.$base-green-800};
  --button-background-color: #{tokens.$base-green-400};
  --button-background-color-hover: #{tokens.$base-green-500};
  --button-disabled-background-color: #{tokens.$base-gray-800};
}

.Button {
  @include styles.styles-reset;
  @include styles.text-wrapping;
  all: revert;

  -webkit-appearance: none;

  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif, sans-serif;
  font-size: 1rem;
  font-weight: bold;
  font-style: normal;

  min-width: 5rem;
  min-height: 2.5rem;
  margin: 0;
  padding: 0 1rem;

  cursor: pointer;
  -webkit-user-select: none;
  user-select: none;

  text-align: center;
  vertical-align: baseline;
  text-decoration: none;

  text-align: center;
  white-space: nowrap;

  color: var(--button-color);
  border: none;
  border-radius: 0.5rem;
  border: solid 1px transparent;
  background: var(--button-background-color);
  box-shadow: none;

  transition: all ease-in-out 0.3s;

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;

  &,
  * {
    color: var(--button-color);
    fill: var(--button-color);
  }

  /* Pseudo classes */

  /* Hover (only If device has hover capabilities) */
  @include styles.feature-to("hover") {
    &:hover:not(:disabled) {
      background-color: var(--button-background-color-hover);
      color: #fff;
    }
  }

  /* Active (when a mouse or keyboard is pressing) */
  &:active {
    outline: solid 2px blue;
    outline-offset: 2px;
  }

  /* Focus */
  &:focus:not(:focus-visible) {
    outline: none;
  }

  &:focus-visible {
    text-decoration: underline;
    outline: solid 2px blue;
    outline-offset: 2px;
  }

  /* Disabled */
  &:disabled,
  &[disabled] {
    background-color: var(--button-disabled-background-color);
    border-color: transparent;
    color: #000;
    pointer-events: none;
  }
}

/*  */
.Button--block {
  width: 100%;
}

/*
  ButtonVariantType
  "default" | "ghost" | "text" | "link"
*/

.Button--ghost {
  border-color: var(--button-background-color);
  color: var(--button-background-color);
  background-color: transparent;

  @include styles.feature-to("hover") {
    &:hover:not(:disabled) {
      color: #fff;
      background: var(--button-background-color);
    }
  }
}

.Button--text {
  border-color: transparent;
  background-color: transparent;

  color: var(--button-background-color);

  @include styles.feature-to("hover") {
    &:hover:not(:disabled) {
      color: #fff;
      background: var(--button-background-color);
    }
  }
}

.Button--link {
  border-color: transparent;
  background-color: transparent;
  text-decoration: underline;

  color: var(--button-background-color);

  @include styles.feature-to("hover") {
    &:hover:not(:disabled) {
      color: #fff;
      background: var(--button-background-color);
    }
  }
}

/*
  ButtonColorType
  "primary" | "secondary" | "warning" | "success" | "warning" | "error" | "info"
*/

.Button {
}

.Button--secondary {
}
.Button--error {
  --button-background-color: red;
}
.Button--success {
}
.Button--warning {
  --button-background-color: orange;
}

.Button--info {
  --button-background-color: purple;
}

/*
  ButtonVariantSize
  "small" | "default" | "large"
*/
.Button--small {
  font-size: 0.75rem;

  min-width: 4rem;
  min-height: 2rem;
  padding: 0 0.75rem;
}

.Button--large {
  font-size: 1.25rem;
  min-width: 6rem;
  min-height: 3rem;
  padding: 0 1.25rem;
  // padding: 0 2rem;
}
