name: Build UI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

env:
  COMMIT_SHA: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
  BRANCH: ${{ github.event_name == 'pull_request' && format('refs/heads/{0}', github.event.pull_request.head.ref) || github.ref }}

jobs:
  build:
    strategy:
      matrix:
        node-version: [18.x]
        os: ["ubuntu-latest"]

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ${{ matrix.os }}

    steps:
      - name: Prepare repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
          fetch-depth: 0

      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-nodemodules
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: |
            .turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-turbo-

      - name: Set up Node v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Component Library
        run: npm run build

      - name: Test Component Library
        run: npm run test
